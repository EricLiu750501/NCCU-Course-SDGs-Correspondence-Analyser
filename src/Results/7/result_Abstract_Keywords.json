{
  "Mode": "Abstract_Keywords",
  "Info": {
    "url": "https://ah.lib.nccu.edu.tw/scholar?id=6917&locale=en&locale=en",
    "college": "College of Informatics",
    "department": "Department of Computer Science",
    "expertise": [
      "軟體工程",
      "智慧環境與物聯網",
      "Cloud Native系統"
    ],
    "title": "Toward Reliable Service Management in Message-Oriented Pervasive Systems"
  },
  "Abstract": "Reliability is one of the key challenges of pervasive systems. Numerous message-oriented architectures and service\ndiscovery protocols have been proposed to support service management in pervasive systems. Nevertheless, few researches have\nbeen done to improve the reliability of pervasive systems. This paper attempts to propose a reliable service management framework by\nformally defining a message-oriented service application model and protocols that facilitate autonomous composition, failure detection,\nand recovery of services. Proposed approaches are realized by constructing a developer’s toolkit that enables rapid-prototyping of\nservices. We evaluate the proposed approach by first proving the reliability property and then conducting experiments on recovery rate\nand performance. The results show that the recovery rate can be greatly improved by the proposed approach. Furthermore, the\nservices developed by using the proposed approach are capable of integrating heterogeneous software/hardware, and can be\ndeployed in dissimilar sites with little efforts.\n",
  "Keywords": "Services models, services architectures, services discovery architecture, service system\n",
  "Result": {
    "General Computer Science": {
      "reason": "The abstract discusses fundamental concepts like reliability, service management, and system architecture, which fall under the umbrella of general computer science principles.",
      "score": 7
    },
    "Computer Science (miscellaneous)": {
      "reason": "While the topic is specific, it doesn't neatly fit into a well-defined subfield, making 'miscellaneous' a relevant category to capture the broader scope.",
      "score": 3
    },
    "Artificial Intelligence": {
      "reason": "The abstract mentions 'autonomous composition' which hints at AI-related concepts, although it's not the primary focus.",
      "score": 2
    },
    "Computational Theory and Mathematics": {
      "reason": "The abstract mentions 'proving the reliability property', which implies some level of formal verification or mathematical modeling.",
      "score": 4
    },
    "Computer Graphics and Computer-Aided Design": {
      "reason": "Not relevant. The abstract doesn't discuss any graphical or design aspects.",
      "score": 0.001
    },
    "Computer Networks and Communications": {
      "reason": "The abstract mentions 'message-oriented architectures' and 'service discovery protocols', which are core concepts in computer networking and communication.",
      "score": 6
    },
    "Computer Science Applications": {
      "reason": "The abstract describes a practical application of computer science principles to improve the reliability of pervasive systems.",
      "score": 8
    },
    "Computer Vision and Pattern Recognition": {
      "reason": "Not relevant. The abstract doesn't discuss any computer vision or pattern recognition aspects.",
      "score": 0.001
    },
    "Hardware and Architecture": {
      "reason": "The abstract mentions 'integrating heterogeneous software/hardware', indicating some relevance to hardware considerations.",
      "score": 3
    },
    "Human-Computer Interaction": {
      "reason": "Not relevant. The abstract doesn't discuss any user interface or interaction aspects.",
      "score": 0.001
    },
    "Information Systems": {
      "reason": "The abstract discusses service management and information flow within a system, which are relevant to information systems.",
      "score": 5
    },
    "Signal Processing": {
      "reason": "Not relevant. The abstract doesn't discuss any signal processing aspects.",
      "score": 0.001
    },
    "Software": {
      "reason": "The abstract focuses on software architectures, service models, and a developer's toolkit, making software a highly relevant domain.",
      "score": 9
    }
  }
}
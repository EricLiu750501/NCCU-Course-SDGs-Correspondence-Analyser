
You are an expert in Sustainable Development Goals (SDGs) classification.  
Your task is to analyze the following university course and assign relevance scores to each SDG.  

Scoring rules:
- 10.000: Core concept – the course fundamentally contributes to this SDG.
- 7.000-9.999: Highly relevant – a major focus or significant application area.
- 4.000-6.999: Moderately relevant – a supporting area or minor application.
- 1.000-3.999: Low relevance – only tangentially mentioned.
- 0.001-0.999: Minimal relevance – barely related.

Instructions:
- Always analyze based strictly on the provided course information.  
- Every SDG must include exactly four fields: "reason", "score", "evidence", "evidence_type".  
- If no evidence is found in the course description, set "evidence" to [] and "evidence_type" to "none".  
- Do not invent content beyond the course information.  

---

**Course Information**
國立政治大學校務行政系統 教學大綱 Syllabus
# 教學大綱 Syllabus
##  科目名稱：基礎程式設計
#####  Course Name: Basic Computer Programming
  * 學年學期：114-1 Fall Semester, 2025 
  * 科目代碼：405899001 Course No.405899001
#### 修別：選
Type of Credit: Elective 
_3.0_
#### 預收人數
Number of Students
課程資料Course Details
  * 開課單位：傳院一甲、傳院一乙、傳院一丙、傳院一丁 Course Department:Undeclared Major in College of Communication/B/1 
  * 授課老師：張景堯 Instructor: CHANG JIING-YAO 
  * 先修科目：無Prerequisite(N/A)
  * 上課時間：三234 Session: wed09-12
##  課程簡介Course Description
本課程特別為傳播學院同學打造，設定對象是完全沒有基礎的新手，從頭開始教學，自然組或社會組學生都適宜選修。透過上課講授、課間測驗討論、實機程式編寫練習、自主線上學習四種方式讓同學可以循序漸進的了解程式設計的觀念，熟悉程式設計的實作過程。
這門課主要採用容易入門、理解的Python程式語言，讓同學建立起程式語言設計的觀念，有了這個基礎觀念之後，將有助於日後面對數位化潮流所帶來的種種衝擊與問題之處理。所以這門課不只是教同學用Python去撰寫程式，也將培養同學不怕出錯具備面對問題、解決問題的能力，並試著帶同學去釐清問題、拆解問題，像程式設計師一樣的思考，最後能確實運用Python程式語言來解決各種難題，並應用到其他領域的課業學習及未來的專案工作上。
加簽原則：傳院大四優先，若超出教室容量以抽籤決定，第一次上課處理。
###  核心能力分析圖 Core Competence Analysis Chart
012345ABCDEFGH雷達圖老師學生
「無核心能力」 
能力項目說明
  * A. 資訊處理能力
  * B. 媒介能力
  * C. 敘事能力
  * D. 統合能力
  * E. 創新能力
  * F. 倫理能力
  * G. 溝通能力
  * H. 實作能力
##  課程目標與學習成效Course Objectives & Learning Outcomes 
完成本課程後，期許能幫助學生達成以下學習成效：
  1. 建立程式邏輯觀念、了解運算思維。
  2. 運用變數、條件判斷、迴圈以及函式等核心概念開發可正確執行的程式。
  3. 能夠釐清問題、拆解問題、分析問題並透過程式來解決問題。
  4. 具備除錯能力並會利用資源(網路、同儕、書籍等)協助程式開發。
##  每周課程進度與作業要求 Course Schedule & Requirements
|  週次 Week |  課程主題 Topic |  課程內容與指定閱讀 Content and Reading Assignment |  教學活動與作業 Teaching Activities and Homework |  學習投入時間 Student workload expectation  
---|---|---|---|---  
課堂講授 In-class Hours |  課程前後 Outside-of-class Hours  
1 |  課程介紹  
Introduction |  課程說明、為什麼要學習程式設計？程式設計的基本原則 |  第1,2章課間測驗 |  3 |  5  
2 |  變數和運算式Variables and expressions |  Python 的安裝與開發環境介紹、物件的命名與指派：變數與運算式 |  第3,4章課間測驗與編程練習 |  3 |  5  
3 |  型別和敘述Object types and statements |  物件型別與敘述、整合專案：從分鐘數轉換成幾小時幾分 |  第5,6章課間測驗與整合專案編程 |  3 |  6  
4 |  字串  
Strings |  一連串有順序的字元、字串的進階操作 |  第7,8章課間測驗與編程練習 |  3 |  3  
5 |  tuple 及輸出入功能 Tuple object and interacting with user |  一連串有順序的物件、Python 的輸出入功能 |  第9,10章課間測驗與編程練習 |  3 |  5  
6 |  錯誤訊息與除錯 Error messages and Debug |  整合專案：重組姓名、錯誤訊息與除錯、條件判斷式1 |  第11,12,13(1)章課間測驗與整合專案編程 |  3 |  6  
7 |  條件判斷式  
Making decisions |  條件判斷式2、進階條件式判斷、整合專案：文字冒險旅程 |  第13(2),14,15章課間測驗與編程練習 |  3 |  3  
8 |  期中考  
Midterm Exam |  |  |  3 |  12  
9 |  重複執行作業  
Repeating Task |  while 迴圈、計次執行的for 迴圈 |  第16,17章課間測驗與編程練習 |  3 |  5  
10 |  客製迴圈  
Customizing loops |  用 for 迴圈走訪容器中的元素、整合專案：拼字遊戲 |  第18,19章課間測驗與整合專案編程 |  3 |  6  
11 |  建構可重複使用的程式區塊  
Reusable blocks |  建構大型程式、使用函式將程式模組化和抽象化 |  第20,21章課間測驗與編程練習 |  3 |  5  
12 |  進階函式  
Advanced functions |  函式的進階技巧、整合專案：分析好友資訊 |  第22,23章課間測驗與整合專案編程 |  3 |  6  
13 |  可變物件  
Mutable data types |  可變物件與不可變物件、  
串列物件 |  第24,25章課間測驗與編程練習 |  3 |  5  
14 |  進階串列與字典 Advanced lists & Dictionaries |  串列的進階操作、字典物件 |  第26,27章課間測驗與編程練習 |  3 |  5  
15 |  別名與複製內容 Aliasing and copying content |  替串列、字典建立別名或複製內容、整合專案：比較文章的相似度 |  第28,29章課間測驗與整合專案編程 |  3 |  6  
16 |  期末考  
Final Exam |  |  |  3 |  12  
|  自主學習  
Self-Paced Learning |  進行 Snakify 自主學習程式練習 |  至少完成60題練習 |  0 |  24  
####  其他： Others: Programming Exercise 
####  已申請之圖書館指定參考書目  圖書館指定參考書查詢 |相關處理要點
維護智慧財產權，務必使用正版書籍。 Respect Copyright.

---

**Target SDGs (MAINTAIN THE EXACT ORDER PROVIDED):**

    1. No Poverty
    2. Zero Hunger
    3. Good Health and Well-being
    4. Quality Education
    5. Gender Equality
    6. Clean Water and Sanitation
    7. Affordable and Clean Energy
    8. Decent Work and Economic Growth
    9. Industry, Innovation and Infrastructure
    10. Reduced Inequalities
    11. Sustainable Cities and Communities
    12. Responsible Consumption and Production
    13. Climate Action
    14. Life Below Water
    15. Life on Land
    16. Peace, Justice and Strong Institutions
    17. Partnerships for the Goals
    

---

**Respond ONLY in JSON format, structured exactly as follows:**
```json
{
    "No Poverty": {
        "reason": "Concise reason citing phrases or concepts from the course (or explicit absence).",
        "score": number_with_three_decimal_places,
        "evidence": ["Exact phrase(s) from the course or [] if none"],
        "evidence_type": "direct or none"
    },
    "Zero Hunger": {
        "reason": "...",
        "score": ...,
        "evidence": [...],
        "evidence_type": "direct or none"
    },
    ...
    "Partnerships for the Goals": {
        "reason": "...",
        "score": ...,
        "evidence": [...],
        "evidence_type": "direct or none"
    }
}
